// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ToolStatus {
  AVAILABLE
  UNAVAILABLE
  MAINTENANCE
}

enum ComStatus {
  paid
  unpaid
}

enum VisibilityStatus {
  VISIBLE
  HIDDEN
}

// //google looging  
// model Users {
//   id    String @id @default(cuid())
//   name  String?
//   email String @unique
//   image String?
// }
// user needed



// enum type {
//   User
//   Organization
// }

enum Role {
  user
  admin 
  superAdmin
}


///  farmer(user)  and  company owners( admin and superAdmin)
model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  role Role @default(user)
  location String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



// compnay user     usr  admin  and superAdmin 
  model company_users {
  user_id                   Int                         @id @default(autoincrement())
  full_name                 String                      @db.VarChar
  email                     String                      @unique @db.VarChar(255)
  password                  String                      @db.VarChar(64)
  role                      Role
  orgId                        Int?                    
  create_at                 DateTime?                   @default(dbgenerated("CURRENT_DATE")) @db.Date
  updated_at                DateTime?                   @default(dbgenerated("CURRENT_DATE")) @db.Date
  Organizations                 Organizations?                  @relation(fields: [orgId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}



//Organization removed item
// { 
//    // username    String    // no more needed
//   // password    String    // no more needed
// role Role @default(admin)  no more needed
// type        type      @default(Organization) 
// }


model Organizations {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  address     String
  Isdeleted   VisibilityStatus   @default(VISIBLE)
  status      ComStatus @default(unpaid)
  phone       String
  description String?
  subscribtion_fee Decimal? 
  tools       Tools[]
  company_users company_users[]
  orders      Orders[]
  employes   Employee[]
  posts    Post[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// model Service {
//   id Int @id 
// }

model Tools {
  id              Int           @id @default(autoincrement())
  name            String
  description     String
  price           String
  image           String
  status          ToolStatus    @default(AVAILABLE)
  location        String
  category        String
  rating Float? @default(0.0)

  organization_id Int
  organization    Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orders          Orders[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Orders {
  id              Int           @id @default(autoincrement())
  farmer_name     String
  address         String
  phone           String
  status          String
  start_date      DateTime?
  end_date        DateTime?
  organization_id Int
  organization    Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tool_id         Int
  tool            Tools         @relation(fields: [tool_id], references: [id])
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}




model Employee {
  id          Int      @id @default(autoincrement())
  Image       String
  name        String
  skillset    String
  availability Boolean @default(true)
  organization_id Int
  organization Organizations @relation(fields: [organization_id], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}



model Post {
  id              Int           @id @default(autoincrement())
  title           String
  Image            String
  content         String
  status          VisibilityStatus @default(HIDDEN)
  organization_id Int
  organization    Organizations @relation(fields: [organization_id], references: [id])
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}
